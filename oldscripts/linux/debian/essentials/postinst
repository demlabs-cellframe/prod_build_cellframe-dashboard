#!/bin/bash -

. /usr/share/debconf/confmodule

DAP_CHAINS_NAME="cellframe"
DAP_APP_NAME="$DAP_CHAINS_NAME-node"
DAP_DASHBOARD_NAME="$DAP_CHAINS_NAME-dashboard"
DAP_PREFIX="/opt/$DAP_APP_NAME"
DAP_DASHBOARD_PREFIX="/opt/$DAP_DASHBOARD_NAME"

DAP_CFG_TPL="$DAP_PREFIX/share/configs/$DAP_APP_NAME.cfg.tpl"

# Store write config to new if present smth
DAP_CFG="$DAP_PREFIX/etc/$DAP_APP_NAME.cfg"

FLAG_CHAIN_DB_CLEAR="true"

if [ "$FLAG_CHAIN_DB_CLEAR" = "true" ]; then
    rm -r "$DAP_PREFIX/var/lib/network"
    rm -r "$DAP_PREFIX/var/lib/global_db"
fi


# Check profile.d symlink

[ -e "/etc/profile.d/$DAP_APP_NAME.sh" ] || ln -sf $DAP_PREFIX/share/profile.d/$DAP_APP_NAME.sh /etc/profile.d/$DAP_APP_NAME.sh

# Init node config
if [ -e "$DAP_CFG" ]; then
    DAP_CFG="$DAP_PREFIX/etc/$DAP_APP_NAME.cfg.dpkg-new"
else
    DAP_CFG="$DAP_PREFIX/etc/$DAP_APP_NAME.cfg"
fi

cat $DAP_CFG_TPL > $DAP_CFG || true

sed -i "s/{PREFIX}/\/opt\/$DAP_APP_NAME/g" $DAP_CFG  || true

db_get cellframe-node/debug_mode || true
sed -i "s/{DEBUG_MODE}/$RET/g" $DAP_CFG  || true

db_get cellframe-node/auto_online || true
sed -i "s/{AUTO_ONLINE}/$RET/g" $DAP_CFG  || true

db_get cellframe-node/server_enabled || true
sed -i "s/{SERVER_ENABLED}/$RET/g" $DAP_CFG  || true

db_get cellframe-node/server_port || true
sed -i "s/{SERVER_PORT}/$RET/g" $DAP_CFG  || true

db_get cellframe-node/server_addr || true
sed -i "s/{SERVER_ADDR}/$RET/g" $DAP_CFG  || true

db_get cellframe-node/notify_srv_addr || true
sed -i "s/{NOTIFY_SRV_ADDR}/$RET/g" $DAP_CFG  || true

db_get cellframe-node/notify_srv_port || true
sed -i "s/{NOTIFY_SRV_PORT}/$RET/g" $DAP_CFG  || true

# Init core testnet
#NET_NAME="core-t"
#
#db_get cellframe-node/core_t_enabled || true
#if [ "$RET" = "true" ]; then
#    DAP_CFG_NET="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
#    DAP_CFG_NET_TPL="$DAP_PREFIX/share/configs/network/$NET_NAME.cfg.tpl"
#    DAP_NET_CFG=""
#    if [ -e "$DAP_CFG_NET" ]; then
#	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg.dpkg-new"
#    else
#	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
#    fi
#
#    cat $DAP_CFG_NET_TPL > $DAP_NET_CFG || true
#    db_get cellframe-node/core_t_node_type || true
#    NODE_TYPE=$RET
#    sed -i "s/{NODE_TYPE}/$NODE_TYPE/g" $DAP_NET_CFG  || true
#    echo "[*] Enabled core testnet"
#fi



# Init kelvin-testnet
#NET_NAME="kelvin-testnet"
#
#db_get cellframe-node/kelvin_testnet_enabled || true
#if [ "$RET" = "true" ]; then
#    DAP_CFG_NET="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
#    DAP_CFG_NET_TPL="$DAP_PREFIX/share/configs/network/$NET_NAME.cfg.tpl"
#    DAP_NET_CFG=""
#    if [ -e "$DAP_CFG_NET" ]; then
#	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg.dpkg-new"
#    else
#	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
#    fi
#
#    cat $DAP_CFG_NET_TPL > $DAP_NET_CFG || true
#    db_get cellframe-node/kelvin_testnet_node_type || true
#    NODE_TYPE=$RET
#    sed -i "s/{NODE_TYPE}/$NODE_TYPE/g" $DAP_NET_CFG  || true
#    echo "[*] Enabled kelvin testnet"
#fi

# Init subzero
NET_NAME="subzero"

db_get cellframe-node/subzero_enabled || true
if [ "$RET" = "true" ]; then
    DAP_CFG_NET="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
    DAP_CFG_NET_TPL="$DAP_PREFIX/share/configs/network/$NET_NAME.cfg.tpl"
    DAP_NET_CFG=""
    if [ -e "$DAP_CFG_NET" ]; then
	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg.dpkg-new"
    else
	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
    fi

    cat $DAP_CFG_NET_TPL > $DAP_NET_CFG || true
    db_get cellframe-node/subzero_node_type || true
    NODE_TYPE=$RET
    sed -i "s/{NODE_TYPE}/$NODE_TYPE/g" $DAP_NET_CFG  || true
    echo "[*] Enabled subzero"
fi

# Init minkowski
NET_NAME="kelvpn-minkowski"
#
db_get cellframe-node/kelvpn_minkowski_enabled || true
if [ "$RET" = "true" ]; then
    DAP_CFG_NET="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
    DAP_CFG_NET_TPL="$DAP_PREFIX/share/configs/network/$NET_NAME.cfg.tpl"
    DAP_NET_CFG=""
    if [ -e "$DAP_CFG_NET" ]; then
	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg.dpkg-new"
    else
	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
    fi

    cat $DAP_CFG_NET_TPL > $DAP_NET_CFG || true
    db_get cellframe-node/kelvpn_minkowski_node_type || true
    NODE_TYPE=$RET
    sed -i "s/{NODE_TYPE}/$NODE_TYPE/g" $DAP_NET_CFG  || true
    echo "[*] Enabled kelvpn-minkowski"
fi


# Init Backbone
NET_NAME="Backbone"

db_get cellframe-node/backbone_enabled || true
if [ "$RET" = "true" ]; then
    DAP_CFG_NET="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
    DAP_CFG_NET_TPL="$DAP_PREFIX/share/configs/network/$NET_NAME.cfg.tpl"
    DAP_NET_CFG=""
    if [ -e "$DAP_CFG_NET" ]; then
	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg.dpkg-new"
    else
	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
    fi

    cat $DAP_CFG_NET_TPL > $DAP_NET_CFG || true
    db_get cellframe-node/backbone_node_type || true
    NODE_TYPE=$RET
    sed -i "s/{NODE_TYPE}/$NODE_TYPE/g" $DAP_NET_CFG  || true
    echo "[*] Enabled Backbone"
fi

# Init mileena
NET_NAME="mileena"

db_get cellframe-node/mileena_enabled || true
if [ "$RET" = "true" ]; then
    DAP_CFG_NET="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
    DAP_CFG_NET_TPL="$DAP_PREFIX/share/configs/network/$NET_NAME.cfg.tpl"
    DAP_NET_CFG=""
    if [ -e "$DAP_CFG_NET" ]; then
	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg.dpkg-new"
    else
	DAP_NET_CFG="$DAP_PREFIX/etc/network/$NET_NAME.cfg"
    fi

    cat $DAP_CFG_NET_TPL > $DAP_NET_CFG || true
    db_get cellframe-node/mileena_node_type || true
    NODE_TYPE=$RET
    sed -i "s/{NODE_TYPE}/$NODE_TYPE/g" $DAP_NET_CFG  || true
    echo "[*] Enabled mileena"
fi

mkdir -p $DAP_PREFIX/var/log     || true
mkdir -p $DAP_PREFIX/var/plugins || true


cat /etc/passwd| grep cellframe-node || adduser --system --no-create-home --group --home /opt/cellframe-node cellframe-node || true

echo "[*] Check /etc/systemd/system/$DAP_APP_NAME.service file..."
if [ -e /etc/systemd/system/$DAP_APP_NAME.service ]; then
    echo "[*] Restarting $DAP_APP_NAME to implement changes"
    systemctl --system stop $DAP_APP_NAME  >> /dev/null|| true
    echo "[*] Stopped $DAP_APP_NAME"
    systemctl daemon-reload || true
    systemctl --system start $DAP_APP_NAME || true
    echo "[*] Started $DAP_APP_NAME"
else
    echo "[!] Installing $DAP_APP_NAME as systemd service (haven't found /etc/systemd/system/$DAP_APP_NAME.service)"
    ln -sf $DAP_PREFIX/share/$DAP_APP_NAME.service /etc/systemd/system/$DAP_APP_NAME.service || true
    systemctl --system enable $DAP_PREFIX/share/$DAP_APP_NAME.service || true
#    systemctl --system start $DAP_APP_NAME
    echo "[ ] Execute 'systemctl start $DAP_APP_NAME' to start $DAP_APP_NAME service"

    #USERMAN=`users | awk '{print $1}'`
    echo "[ ] Enabling logrotate"
    ln -sf $DAP_PREFIX/share/logrotate/$DAP_APP_NAME /etc/logrotate.d/$DAP_APP_NAME || true
    adduser --system --no-create-home --group --home /opt/cellframe-node cellframe-node || true
    #usermod -aG $DAP_CHAINS_NAME `users | awk '{print $1}'`
    for username in $(cat /etc/passwd | grep "/home" | cut -d ':' -f1); do
        usermod -aG cellframe-node $username || true
    done
    #mkdir -p $DAP_PREFIX/var/{run,lib/wallet,lib/global_db,var/plugins} || true
    mkdir -p $DAP_DASHBOARD_PREFIX/log || true
    mkdir -p $DAP_PREFIX/var/{run,lib/ca,lib/wallet,lib/global_db,var/plugins} || true
    touch $DAP_PREFIX/var/run/cellframe-node.pid || true
    #chown -R $USERMAN:$USERMAN $DAP_PREFIX
    for filename in $(find $DAP_PREFIX | grep -v bugreport); do
        if [ -d $filename ]; then
            chmod 0775 $filename || true
        else
            chmod 0664 $filename || true
        fi
    done
    chmod 0777 $DAP_DASHBOARD_PREFIX/log/
    chmod 0777 $DAP_PREFIX/var/lib/ca/
    chmod 0666 $DAP_CFG
    chmod 0666 $DAP_CFG_TPL
    chmod 0774 $DAP_PREFIX/bin/* || true
    chmod 0777 $DAP_PREFIX/bin/$DAP_APP_NAME-cli || true
    #rm  -r $DAP_PREFIX/var/lib/global_db/gdb-cdb/
    service cellframe-node start || true
    systemctl restart cellframe-node || true
    echo "[!] Done"
fi

APP_NAME=Cellframe-Dashboard

case "$1" in
    configure)

    ln -sf /opt/cellframe-dashboard/share/init.d/cellframe-dashboard.service /etc/systemd/user/cellframe-dashboard.service
    systemctl --system enable /opt/cellframe-dashboard/share/init.d/cellframe-dashboard.service
    ln -sf /opt/cellframe-dashboard/bin/$APP_NAME /usr/local/bin/$APP_NAME
    chmod +X /usr/local/bin/$APP_NAME
    cp -f /opt/cellframe-dashboard/share/CellFrameDashboard.desktop /usr/share/applications/CellFrameDashboard.desktop
	cp -f /opt/cellframe-dashboard/share/CellFrameDashboard.ico	/usr/share/pixmaps/CellFrameDashboard.ico
    update-menus
    service cellframe-dashboard restart
#    echo "For start CellFrame Dashboard Service - run 'systemctl start cellframe-dashboard'"
;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 2
    ;;
esac
exit 0


